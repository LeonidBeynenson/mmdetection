strict digraph  {
"0 RetinaNet/ResNet[backbone]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"1 RetinaNet/ResNet[backbone]/NNCFConv2d[conv1]/conv2d_0";
"2 RetinaNet/ResNet[backbone]/BatchNorm2d[bn1]/batch_norm_0";
"3 RetinaNet/ResNet[backbone]/ReLU[relu]/RELU_0";
"4 RetinaNet/ResNet[backbone]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"5 RetinaNet/ResNet[backbone]/MaxPool2d[maxpool]/max_pool2d_0";
"6 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"7 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0";
"8 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0";
"9 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_0";
"10 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"11 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"12 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0";
"13 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0";
"14 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_1";
"15 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"16 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"17 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0";
"18 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0";
"19 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"20 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"21 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"22 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0";
"23 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"24 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/__iadd___0";
"25 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_2";
"26 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"27 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"28 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0";
"29 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0";
"30 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_0";
"31 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"32 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"33 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0";
"34 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0";
"35 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_1";
"36 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"37 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"38 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0";
"39 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0";
"40 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"41 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/__iadd___0";
"42 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_2";
"43 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"44 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"45 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0";
"46 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0";
"47 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_0";
"48 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"49 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"50 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0";
"51 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0";
"52 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_1";
"53 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"54 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"55 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0";
"56 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0";
"57 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"58 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/__iadd___0";
"59 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_2";
"60 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"61 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"62 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0";
"63 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0";
"64 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_0";
"65 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"66 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"67 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0";
"68 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0";
"69 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_1";
"70 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"71 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"72 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0";
"73 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0";
"74 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"75 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"76 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"77 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0";
"78 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"79 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/__iadd___0";
"80 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_2";
"81 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"82 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"83 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0";
"84 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0";
"85 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_0";
"86 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"87 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"88 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0";
"89 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0";
"90 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_1";
"91 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"92 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"93 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0";
"94 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0";
"95 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"96 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/__iadd___0";
"97 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_2";
"98 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"99 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"100 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0";
"101 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0";
"102 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_0";
"103 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"104 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"105 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0";
"106 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0";
"107 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_1";
"108 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"109 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"110 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0";
"111 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0";
"112 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"113 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/__iadd___0";
"114 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_2";
"115 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"116 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"117 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0";
"118 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm_0";
"119 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_0";
"120 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"121 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"122 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0";
"123 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm_0";
"124 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_1";
"125 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"126 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"127 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0";
"128 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0";
"129 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"130 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/__iadd___0";
"131 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_2";
"132 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"133 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"134 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0";
"135 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0";
"136 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_0";
"137 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"138 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"139 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0";
"140 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0";
"141 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_1";
"142 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"143 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"144 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0";
"145 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0";
"146 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"147 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"148 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"149 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0";
"150 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"151 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/__iadd___0";
"152 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_2";
"153 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"154 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"155 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0";
"156 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0";
"157 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_0";
"158 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"159 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"160 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0";
"161 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0";
"162 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_1";
"163 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"164 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"165 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0";
"166 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0";
"167 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"168 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/__iadd___0";
"169 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_2";
"170 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"171 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"172 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0";
"173 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0";
"174 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_0";
"175 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"176 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"177 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0";
"178 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0";
"179 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_1";
"180 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"181 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"182 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0";
"183 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0";
"184 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"185 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/__iadd___0";
"186 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_2";
"187 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"188 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"189 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0";
"190 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm_0";
"191 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_0";
"192 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"193 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"194 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0";
"195 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm_0";
"196 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_1";
"197 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"198 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"199 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0";
"200 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0";
"201 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"202 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/__iadd___0";
"203 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_2";
"204 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"205 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"206 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d_0";
"207 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn1]/batch_norm_0";
"208 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_0";
"209 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"210 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"211 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d_0";
"212 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn2]/batch_norm_0";
"213 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_1";
"214 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"215 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"216 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d_0";
"217 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn3]/batch_norm_0";
"218 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"219 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/__iadd___0";
"220 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_2";
"221 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"222 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"223 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d_0";
"224 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn1]/batch_norm_0";
"225 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_0";
"226 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"227 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"228 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d_0";
"229 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn2]/batch_norm_0";
"230 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_1";
"231 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"232 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"233 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d_0";
"234 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm_0";
"235 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"236 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/__iadd___0";
"237 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_2";
"238 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"239 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"240 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0";
"241 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0";
"242 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_0";
"243 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"244 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"245 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0";
"246 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0";
"247 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_1";
"248 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"249 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"250 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0";
"251 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0";
"252 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"253 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"254 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"255 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0";
"256 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"257 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/__iadd___0";
"258 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_2";
"259 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"260 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"261 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0";
"262 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0";
"263 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_0";
"264 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"265 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"266 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0";
"267 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0";
"268 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_1";
"269 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"270 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"271 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0";
"272 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0";
"273 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"274 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/__iadd___0";
"275 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_2";
"276 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"277 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"278 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0";
"279 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0";
"280 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_0";
"281 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"282 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"283 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0";
"284 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0";
"285 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_1";
"286 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"287 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"288 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0";
"289 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0";
"290 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0";
"291 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/__iadd___0";
"292 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_2";
"293 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"294 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"295 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0";
"296 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"297 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"298 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0";
"299 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"300 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"301 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0";
"302 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"303 RetinaNet/FPN[neck]/interpolate_0";
"304 RetinaNet/FPN[neck]/__iadd___0";
"305 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_0";
"306 RetinaNet/FPN[neck]/interpolate_1";
"307 RetinaNet/FPN[neck]/__iadd___1";
"308 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_1";
"309 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"310 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0";
"311 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"312 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"313 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0";
"314 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"315 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"316 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0";
"317 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"318 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"319 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0";
"320 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"321 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"322 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/conv2d_0";
"323 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0";
"324 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"325 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0";
"326 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_0";
"327 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"328 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"329 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0";
"330 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_0";
"331 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"332 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"333 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0";
"334 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_0";
"335 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"336 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"337 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0";
"338 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_0";
"339 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"340 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"341 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0";
"342 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_0";
"343 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"344 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"345 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0";
"346 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_0";
"347 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"348 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"349 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0";
"350 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_0";
"351 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"352 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"353 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0";
"354 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_0";
"355 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0";
"356 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"357 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_0";
"358 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"359 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_0";
"360 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"361 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1";
"362 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_1";
"363 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"364 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"365 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1";
"366 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_1";
"367 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"368 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"369 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1";
"370 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_1";
"371 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"372 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"373 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1";
"374 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_1";
"375 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"376 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"377 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1";
"378 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_1";
"379 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"380 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"381 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1";
"382 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_1";
"383 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"384 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"385 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1";
"386 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_1";
"387 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"388 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"389 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1";
"390 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_1";
"391 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1";
"392 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"393 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_1";
"394 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"395 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_1";
"396 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"397 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2";
"398 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_2";
"399 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"400 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"401 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2";
"402 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_2";
"403 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"404 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"405 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2";
"406 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_2";
"407 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"408 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"409 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2";
"410 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_2";
"411 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"412 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"413 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2";
"414 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_2";
"415 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"416 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"417 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2";
"418 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_2";
"419 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"420 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"421 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2";
"422 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_2";
"423 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"424 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"425 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2";
"426 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_2";
"427 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2";
"428 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"429 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_2";
"430 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"431 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_2";
"432 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"433 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3";
"434 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_3";
"435 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"436 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"437 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3";
"438 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_3";
"439 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"440 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"441 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3";
"442 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_3";
"443 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"444 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"445 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3";
"446 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_3";
"447 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"448 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"449 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3";
"450 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_3";
"451 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"452 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"453 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3";
"454 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_3";
"455 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"456 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"457 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3";
"458 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_3";
"459 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"460 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"461 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3";
"462 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_3";
"463 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3";
"464 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"465 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_3";
"466 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"467 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_3";
"468 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"469 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4";
"470 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_4";
"471 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"472 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"473 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4";
"474 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_4";
"475 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"476 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"477 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4";
"478 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_4";
"479 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"480 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"481 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4";
"482 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_4";
"483 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"484 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"485 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4";
"486 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_4";
"487 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"488 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"489 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4";
"490 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_4";
"491 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"492 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"493 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4";
"494 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_4";
"495 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"496 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"497 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4";
"498 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_4";
"499 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4";
"500 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"501 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_4";
"502 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4";
"503 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_4";
"0 RetinaNet/ResNet[backbone]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "1 RetinaNet/ResNet[backbone]/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 3, 7, 7)"];
"1 RetinaNet/ResNet[backbone]/NNCFConv2d[conv1]/conv2d_0" -> "2 RetinaNet/ResNet[backbone]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 500, 300)"];
"2 RetinaNet/ResNet[backbone]/BatchNorm2d[bn1]/batch_norm_0" -> "3 RetinaNet/ResNet[backbone]/ReLU[relu]/RELU_0"  [label="(1, 64, 500, 300)"];
"3 RetinaNet/ResNet[backbone]/ReLU[relu]/RELU_0" -> "4 RetinaNet/ResNet[backbone]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 500, 300)"];
"4 RetinaNet/ResNet[backbone]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "5 RetinaNet/ResNet[backbone]/MaxPool2d[maxpool]/max_pool2d_0"  [label="(1, 64, 500, 300)"];
"5 RetinaNet/ResNet[backbone]/MaxPool2d[maxpool]/max_pool2d_0" -> "7 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 64, 250, 150)"];
"5 RetinaNet/ResNet[backbone]/MaxPool2d[maxpool]/max_pool2d_0" -> "21 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 64, 250, 150)"];
"6 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "7 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 64, 1, 1)"];
"7 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0" -> "8 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 250, 150)"];
"8 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0" -> "9 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_0"  [label="(1, 64, 250, 150)"];
"9 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_0" -> "10 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 250, 150)"];
"10 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "12 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 64, 250, 150)"];
"11 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "12 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(64, 64, 3, 3)"];
"12 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0" -> "13 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 64, 250, 150)"];
"13 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0" -> "14 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_1"  [label="(1, 64, 250, 150)"];
"14 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_1" -> "15 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 64, 250, 150)"];
"15 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "17 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 64, 250, 150)"];
"16 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "17 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(256, 64, 1, 1)"];
"17 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0" -> "18 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 256, 250, 150)"];
"18 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0" -> "19 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 250, 150)"];
"19 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "24 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/__iadd___0"  [label="(1, 256, 250, 150)"];
"20 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "21 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(256, 64, 1, 1)"];
"21 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "22 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0"  [label="(1, 256, 250, 150)"];
"22 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0" -> "23 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 250, 150)"];
"23 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "24 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/__iadd___0"  [label="(1, 256, 250, 150)"];
"24 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/__iadd___0" -> "25 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_2"  [label="(1, 256, 250, 150)"];
"25 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/RELU_2" -> "26 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 250, 150)"];
"26 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "28 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 256, 250, 150)"];
"26 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "41 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/__iadd___0"  [label="(1, 256, 250, 150)"];
"27 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "28 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 256, 1, 1)"];
"28 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0" -> "29 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 250, 150)"];
"29 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0" -> "30 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_0"  [label="(1, 64, 250, 150)"];
"30 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_0" -> "31 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 250, 150)"];
"31 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "33 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 64, 250, 150)"];
"32 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "33 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(64, 64, 3, 3)"];
"33 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0" -> "34 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 64, 250, 150)"];
"34 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0" -> "35 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_1"  [label="(1, 64, 250, 150)"];
"35 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_1" -> "36 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 64, 250, 150)"];
"36 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "38 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 64, 250, 150)"];
"37 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "38 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(256, 64, 1, 1)"];
"38 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0" -> "39 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 256, 250, 150)"];
"39 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0" -> "40 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 250, 150)"];
"40 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "41 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/__iadd___0"  [label="(1, 256, 250, 150)"];
"41 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/__iadd___0" -> "42 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_2"  [label="(1, 256, 250, 150)"];
"42 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/RELU_2" -> "43 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 250, 150)"];
"43 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "45 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 256, 250, 150)"];
"43 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "58 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/__iadd___0"  [label="(1, 256, 250, 150)"];
"44 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "45 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 256, 1, 1)"];
"45 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0" -> "46 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 250, 150)"];
"46 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0" -> "47 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_0"  [label="(1, 64, 250, 150)"];
"47 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_0" -> "48 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 250, 150)"];
"48 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "50 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 64, 250, 150)"];
"49 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "50 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(64, 64, 3, 3)"];
"50 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0" -> "51 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 64, 250, 150)"];
"51 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0" -> "52 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_1"  [label="(1, 64, 250, 150)"];
"52 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_1" -> "53 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 64, 250, 150)"];
"53 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "55 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 64, 250, 150)"];
"54 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "55 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(256, 64, 1, 1)"];
"55 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0" -> "56 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 256, 250, 150)"];
"56 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0" -> "57 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 250, 150)"];
"57 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "58 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/__iadd___0"  [label="(1, 256, 250, 150)"];
"58 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/__iadd___0" -> "59 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_2"  [label="(1, 256, 250, 150)"];
"59 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/RELU_2" -> "60 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 250, 150)"];
"60 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "62 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 256, 250, 150)"];
"60 RetinaNet/ResNet[backbone]/ResLayer[layer1]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "76 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 256, 250, 150)"];
"61 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "62 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(128, 256, 1, 1)"];
"62 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0" -> "63 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 128, 250, 150)"];
"63 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0" -> "64 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_0"  [label="(1, 128, 250, 150)"];
"64 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_0" -> "65 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 250, 150)"];
"65 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "67 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 128, 250, 150)"];
"66 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "67 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(128, 128, 3, 3)"];
"67 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0" -> "68 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"68 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0" -> "69 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_1"  [label="(1, 128, 125, 75)"];
"69 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_1" -> "70 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 128, 125, 75)"];
"70 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "72 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 128, 125, 75)"];
"71 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "72 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(512, 128, 1, 1)"];
"72 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0" -> "73 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 512, 125, 75)"];
"73 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0" -> "74 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 125, 75)"];
"74 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "79 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/__iadd___0"  [label="(1, 512, 125, 75)"];
"75 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "76 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(512, 256, 1, 1)"];
"76 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "77 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0"  [label="(1, 512, 125, 75)"];
"77 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0" -> "78 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 125, 75)"];
"78 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "79 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/__iadd___0"  [label="(1, 512, 125, 75)"];
"79 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/__iadd___0" -> "80 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_2"  [label="(1, 512, 125, 75)"];
"80 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/RELU_2" -> "81 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 512, 125, 75)"];
"81 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "83 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 512, 125, 75)"];
"81 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "96 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/__iadd___0"  [label="(1, 512, 125, 75)"];
"82 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "83 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(128, 512, 1, 1)"];
"83 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0" -> "84 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"84 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0" -> "85 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_0"  [label="(1, 128, 125, 75)"];
"85 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_0" -> "86 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 125, 75)"];
"86 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "88 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 128, 125, 75)"];
"87 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "88 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(128, 128, 3, 3)"];
"88 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0" -> "89 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"89 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0" -> "90 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_1"  [label="(1, 128, 125, 75)"];
"90 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_1" -> "91 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 128, 125, 75)"];
"91 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "93 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 128, 125, 75)"];
"92 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "93 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(512, 128, 1, 1)"];
"93 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0" -> "94 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 512, 125, 75)"];
"94 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0" -> "95 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 125, 75)"];
"95 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "96 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/__iadd___0"  [label="(1, 512, 125, 75)"];
"96 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/__iadd___0" -> "97 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_2"  [label="(1, 512, 125, 75)"];
"97 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/RELU_2" -> "98 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 512, 125, 75)"];
"98 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "100 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 512, 125, 75)"];
"98 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "113 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/__iadd___0"  [label="(1, 512, 125, 75)"];
"99 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "100 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(128, 512, 1, 1)"];
"100 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0" -> "101 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"101 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0" -> "102 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_0"  [label="(1, 128, 125, 75)"];
"102 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_0" -> "103 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 125, 75)"];
"103 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "105 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 128, 125, 75)"];
"104 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "105 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(128, 128, 3, 3)"];
"105 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0" -> "106 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"106 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0" -> "107 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_1"  [label="(1, 128, 125, 75)"];
"107 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_1" -> "108 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 128, 125, 75)"];
"108 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "110 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 128, 125, 75)"];
"109 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "110 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(512, 128, 1, 1)"];
"110 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0" -> "111 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 512, 125, 75)"];
"111 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0" -> "112 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 125, 75)"];
"112 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "113 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/__iadd___0"  [label="(1, 512, 125, 75)"];
"113 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/__iadd___0" -> "114 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_2"  [label="(1, 512, 125, 75)"];
"114 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/RELU_2" -> "115 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 512, 125, 75)"];
"115 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "117 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 512, 125, 75)"];
"115 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "130 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/__iadd___0"  [label="(1, 512, 125, 75)"];
"116 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "117 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(128, 512, 1, 1)"];
"117 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0" -> "118 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"118 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm_0" -> "119 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_0"  [label="(1, 128, 125, 75)"];
"119 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_0" -> "120 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 125, 75)"];
"120 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "122 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 128, 125, 75)"];
"121 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "122 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(128, 128, 3, 3)"];
"122 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0" -> "123 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 128, 125, 75)"];
"123 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm_0" -> "124 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_1"  [label="(1, 128, 125, 75)"];
"124 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_1" -> "125 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 128, 125, 75)"];
"125 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "127 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 128, 125, 75)"];
"126 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "127 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0"  [label="(512, 128, 1, 1)"];
"127 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0" -> "128 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 512, 125, 75)"];
"128 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0" -> "129 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 125, 75)"];
"129 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "130 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/__iadd___0"  [label="(1, 512, 125, 75)"];
"130 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/__iadd___0" -> "131 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_2"  [label="(1, 512, 125, 75)"];
"131 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/RELU_2" -> "132 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 512, 125, 75)"];
"132 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "134 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 512, 125, 75)"];
"132 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "148 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 512, 125, 75)"];
"132 RetinaNet/ResNet[backbone]/ResLayer[layer2]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "295 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 512, 125, 75)"];
"133 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "134 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 512, 1, 1)"];
"134 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0" -> "135 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 125, 75)"];
"135 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0" -> "136 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_0"  [label="(1, 256, 125, 75)"];
"136 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_0" -> "137 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"137 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "139 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 125, 75)"];
"138 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "139 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3)"];
"139 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0" -> "140 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"140 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0" -> "141 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_1"  [label="(1, 256, 63, 38)"];
"141 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_1" -> "142 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"142 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "144 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 256, 63, 38)"];
"143 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "144 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(1024, 256, 1, 1)"];
"144 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0" -> "145 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"145 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0" -> "146 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"146 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "151 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"147 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "148 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1024, 512, 1, 1)"];
"148 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "149 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"149 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0" -> "150 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"150 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "151 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"151 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/__iadd___0" -> "152 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_2"  [label="(1, 1024, 63, 38)"];
"152 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/RELU_2" -> "153 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 1024, 63, 38)"];
"153 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "155 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"153 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "168 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"154 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "155 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 1024, 1, 1)"];
"155 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0" -> "156 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"156 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0" -> "157 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_0"  [label="(1, 256, 63, 38)"];
"157 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_0" -> "158 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"158 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "160 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 63, 38)"];
"159 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "160 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3)"];
"160 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0" -> "161 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"161 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0" -> "162 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_1"  [label="(1, 256, 63, 38)"];
"162 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_1" -> "163 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"163 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "165 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 256, 63, 38)"];
"164 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "165 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(1024, 256, 1, 1)"];
"165 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0" -> "166 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"166 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0" -> "167 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"167 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "168 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"168 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/__iadd___0" -> "169 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_2"  [label="(1, 1024, 63, 38)"];
"169 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/RELU_2" -> "170 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 1024, 63, 38)"];
"170 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "172 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"170 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "185 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"171 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "172 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 1024, 1, 1)"];
"172 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0" -> "173 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"173 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0" -> "174 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_0"  [label="(1, 256, 63, 38)"];
"174 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_0" -> "175 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"175 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "177 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 63, 38)"];
"176 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "177 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3)"];
"177 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0" -> "178 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"178 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0" -> "179 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_1"  [label="(1, 256, 63, 38)"];
"179 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_1" -> "180 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"180 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "182 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 256, 63, 38)"];
"181 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "182 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(1024, 256, 1, 1)"];
"182 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0" -> "183 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"183 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0" -> "184 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"184 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "185 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"185 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/__iadd___0" -> "186 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_2"  [label="(1, 1024, 63, 38)"];
"186 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/RELU_2" -> "187 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 1024, 63, 38)"];
"187 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "189 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"187 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "202 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"188 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "189 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 1024, 1, 1)"];
"189 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d_0" -> "190 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"190 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm_0" -> "191 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_0"  [label="(1, 256, 63, 38)"];
"191 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_0" -> "192 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"192 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "194 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 63, 38)"];
"193 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "194 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3)"];
"194 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d_0" -> "195 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"195 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm_0" -> "196 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_1"  [label="(1, 256, 63, 38)"];
"196 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_1" -> "197 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"197 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "199 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 256, 63, 38)"];
"198 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "199 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0"  [label="(1024, 256, 1, 1)"];
"199 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d_0" -> "200 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"200 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0" -> "201 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"201 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "202 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"202 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/__iadd___0" -> "203 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_2"  [label="(1, 1024, 63, 38)"];
"203 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/RELU_2" -> "204 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 1024, 63, 38)"];
"204 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "206 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"204 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "219 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"205 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "206 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 1024, 1, 1)"];
"206 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d_0" -> "207 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"207 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn1]/batch_norm_0" -> "208 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_0"  [label="(1, 256, 63, 38)"];
"208 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_0" -> "209 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"209 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "211 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 63, 38)"];
"210 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "211 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3)"];
"211 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d_0" -> "212 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"212 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn2]/batch_norm_0" -> "213 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_1"  [label="(1, 256, 63, 38)"];
"213 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_1" -> "214 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"214 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "216 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 256, 63, 38)"];
"215 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "216 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d_0"  [label="(1024, 256, 1, 1)"];
"216 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d_0" -> "217 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"217 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn3]/batch_norm_0" -> "218 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"218 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "219 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"219 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/__iadd___0" -> "220 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_2"  [label="(1, 1024, 63, 38)"];
"220 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/RELU_2" -> "221 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 1024, 63, 38)"];
"221 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "223 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"221 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "236 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"222 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "223 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 1024, 1, 1)"];
"223 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d_0" -> "224 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"224 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn1]/batch_norm_0" -> "225 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_0"  [label="(1, 256, 63, 38)"];
"225 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_0" -> "226 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"226 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "228 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 63, 38)"];
"227 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "228 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3)"];
"228 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d_0" -> "229 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 63, 38)"];
"229 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn2]/batch_norm_0" -> "230 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_1"  [label="(1, 256, 63, 38)"];
"230 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_1" -> "231 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"231 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "233 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 256, 63, 38)"];
"232 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "233 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d_0"  [label="(1024, 256, 1, 1)"];
"233 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d_0" -> "234 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 1024, 63, 38)"];
"234 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm_0" -> "235 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 1024, 63, 38)"];
"235 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "236 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/__iadd___0"  [label="(1, 1024, 63, 38)"];
"236 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/__iadd___0" -> "237 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_2"  [label="(1, 1024, 63, 38)"];
"237 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/RELU_2" -> "238 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 1024, 63, 38)"];
"238 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "240 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"238 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "254 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"238 RetinaNet/ResNet[backbone]/ResLayer[layer3]/Bottleneck[5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "298 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 1024, 63, 38)"];
"239 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "240 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(512, 1024, 1, 1)"];
"240 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d_0" -> "241 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 512, 63, 38)"];
"241 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm_0" -> "242 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_0"  [label="(1, 512, 63, 38)"];
"242 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_0" -> "243 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 63, 38)"];
"243 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "245 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 512, 63, 38)"];
"244 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "245 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(512, 512, 3, 3)"];
"245 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d_0" -> "246 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 512, 32, 19)"];
"246 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm_0" -> "247 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_1"  [label="(1, 512, 32, 19)"];
"247 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_1" -> "248 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 512, 32, 19)"];
"248 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "250 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 512, 32, 19)"];
"249 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "250 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0"  [label="(2048, 512, 1, 1)"];
"250 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d_0" -> "251 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 2048, 32, 19)"];
"251 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0" -> "252 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 2048, 32, 19)"];
"252 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "257 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/__iadd___0"  [label="(1, 2048, 32, 19)"];
"253 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "254 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(2048, 1024, 1, 1)"];
"254 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "255 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0"  [label="(1, 2048, 32, 19)"];
"255 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0" -> "256 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 2048, 32, 19)"];
"256 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "257 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/__iadd___0"  [label="(1, 2048, 32, 19)"];
"257 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/__iadd___0" -> "258 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_2"  [label="(1, 2048, 32, 19)"];
"258 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/RELU_2" -> "259 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 2048, 32, 19)"];
"259 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "261 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 2048, 32, 19)"];
"259 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "274 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/__iadd___0"  [label="(1, 2048, 32, 19)"];
"260 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "261 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(512, 2048, 1, 1)"];
"261 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d_0" -> "262 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 512, 32, 19)"];
"262 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm_0" -> "263 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_0"  [label="(1, 512, 32, 19)"];
"263 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_0" -> "264 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 32, 19)"];
"264 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "266 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 512, 32, 19)"];
"265 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "266 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(512, 512, 3, 3)"];
"266 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d_0" -> "267 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 512, 32, 19)"];
"267 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm_0" -> "268 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_1"  [label="(1, 512, 32, 19)"];
"268 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_1" -> "269 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 512, 32, 19)"];
"269 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "271 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 512, 32, 19)"];
"270 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "271 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0"  [label="(2048, 512, 1, 1)"];
"271 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d_0" -> "272 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 2048, 32, 19)"];
"272 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0" -> "273 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 2048, 32, 19)"];
"273 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "274 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/__iadd___0"  [label="(1, 2048, 32, 19)"];
"274 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/__iadd___0" -> "275 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_2"  [label="(1, 2048, 32, 19)"];
"275 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/RELU_2" -> "276 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 2048, 32, 19)"];
"276 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "278 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 2048, 32, 19)"];
"276 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "291 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/__iadd___0"  [label="(1, 2048, 32, 19)"];
"277 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "278 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(512, 2048, 1, 1)"];
"278 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d_0" -> "279 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0"  [label="(1, 512, 32, 19)"];
"279 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm_0" -> "280 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_0"  [label="(1, 512, 32, 19)"];
"280 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_0" -> "281 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 32, 19)"];
"281 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "283 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 512, 32, 19)"];
"282 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "283 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(512, 512, 3, 3)"];
"283 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d_0" -> "284 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0"  [label="(1, 512, 32, 19)"];
"284 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm_0" -> "285 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_1"  [label="(1, 512, 32, 19)"];
"285 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_1" -> "286 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 512, 32, 19)"];
"286 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "288 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(1, 512, 32, 19)"];
"287 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "288 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0"  [label="(2048, 512, 1, 1)"];
"288 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d_0" -> "289 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0"  [label="(1, 2048, 32, 19)"];
"289 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0" -> "290 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 2048, 32, 19)"];
"290 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize_0" -> "291 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/__iadd___0"  [label="(1, 2048, 32, 19)"];
"291 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/__iadd___0" -> "292 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_2"  [label="(1, 2048, 32, 19)"];
"292 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/RELU_2" -> "293 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 2048, 32, 19)"];
"293 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "301 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 2048, 32, 19)"];
"293 RetinaNet/ResNet[backbone]/ResLayer[layer4]/Bottleneck[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "319 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 2048, 32, 19)"];
"294 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "295 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 512, 1, 1)"];
"295 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0" -> "296 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"296 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "307 RetinaNet/FPN[neck]/__iadd___1"  [label="(1, 256, 125, 75)"];
"297 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "298 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 1024, 1, 1)"];
"298 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0" -> "299 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"299 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "304 RetinaNet/FPN[neck]/__iadd___0"  [label="(1, 256, 63, 38)"];
"300 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "301 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 2048, 1, 1)"];
"301 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0" -> "302 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 32, 19)"];
"302 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "303 RetinaNet/FPN[neck]/interpolate_0"  [label="(1, 256, 32, 19)"];
"302 RetinaNet/FPN[neck]/ModuleList[lateral_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "316 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 32, 19)"];
"303 RetinaNet/FPN[neck]/interpolate_0" -> "304 RetinaNet/FPN[neck]/__iadd___0"  [label="(1, 256, 63, 38)"];
"304 RetinaNet/FPN[neck]/__iadd___0" -> "305 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"305 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_0" -> "306 RetinaNet/FPN[neck]/interpolate_1"  [label="(1, 256, 63, 38)"];
"305 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_0" -> "313 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 63, 38)"];
"306 RetinaNet/FPN[neck]/interpolate_1" -> "307 RetinaNet/FPN[neck]/__iadd___1"  [label="(1, 256, 125, 75)"];
"307 RetinaNet/FPN[neck]/__iadd___1" -> "308 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 125, 75)"];
"308 RetinaNet/FPN[neck]/SymmetricQuantizer/symmetric_quantize_1" -> "310 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"309 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "310 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"310 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0" -> "311 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"311 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "325 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"311 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[0]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "341 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"312 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "313 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"313 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0" -> "314 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 63, 38)"];
"314 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "361 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"314 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[1]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "377 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"315 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "316 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"316 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0" -> "317 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 32, 19)"];
"317 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "397 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"317 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[2]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "413 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"318 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "319 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 2048, 3, 3)"];
"319 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0" -> "320 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 16, 10)"];
"320 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "322 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 16, 10)"];
"320 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "433 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"320 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[3]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "449 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"321 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "322 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"322 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/conv2d_0" -> "323 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 8, 5)"];
"323 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "469 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"323 RetinaNet/FPN[neck]/ModuleList[fpn_convs]/ConvModule[4]/NNCFConv2d[conv]/SymmetricQuantizer/symmetric_quantize_0" -> "485 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"324 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "325 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"325 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0" -> "326 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"326 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_0" -> "327 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"327 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "329 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"328 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "329 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"329 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0" -> "330 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"330 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_0" -> "331 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"331 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "333 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"332 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "333 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"333 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0" -> "334 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"334 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_0" -> "335 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"335 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "337 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"336 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "337 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"337 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0" -> "338 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"338 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_0" -> "339 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"339 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "357 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_0"  [label="(1, 256, 125, 75)"];
"340 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "341 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"341 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_0" -> "342 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"342 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_0" -> "343 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"343 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "345 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"344 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "345 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"345 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_0" -> "346 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"346 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_0" -> "347 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"347 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "349 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"348 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "349 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"349 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_0" -> "350 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"350 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_0" -> "351 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"351 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "353 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0"  [label="(1, 256, 125, 75)"];
"352 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "353 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0"  [label="(256, 256, 3, 3)"];
"353 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_0" -> "354 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_0"  [label="(1, 256, 125, 75)"];
"354 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_0" -> "355 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 125, 75)"];
"355 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_0" -> "359 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_0"  [label="(1, 256, 125, 75)"];
"356 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "357 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_0"  [label="(180, 256, 3, 3)"];
"358 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "359 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_0"  [label="(36, 256, 3, 3)"];
"360 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "361 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"361 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1" -> "362 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"362 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_1" -> "363 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"363 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "365 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"364 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "365 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"365 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1" -> "366 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"366 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_1" -> "367 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"367 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "369 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"368 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "369 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"369 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1" -> "370 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"370 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_1" -> "371 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"371 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "373 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"372 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "373 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"373 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1" -> "374 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"374 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_1" -> "375 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"375 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "393 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_1"  [label="(1, 256, 63, 38)"];
"376 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "377 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"377 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_1" -> "378 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"378 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_1" -> "379 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"379 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "381 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"380 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "381 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"381 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_1" -> "382 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"382 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_1" -> "383 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"383 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "385 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"384 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "385 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"385 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_1" -> "386 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"386 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_1" -> "387 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"387 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "389 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1"  [label="(1, 256, 63, 38)"];
"388 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "389 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1"  [label="(256, 256, 3, 3)"];
"389 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_1" -> "390 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_1"  [label="(1, 256, 63, 38)"];
"390 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_1" -> "391 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 63, 38)"];
"391 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_1" -> "395 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_1"  [label="(1, 256, 63, 38)"];
"392 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "393 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_1"  [label="(180, 256, 3, 3)"];
"394 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "395 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_1"  [label="(36, 256, 3, 3)"];
"396 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "397 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"397 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2" -> "398 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"398 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_2" -> "399 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"399 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "401 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"400 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "401 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"401 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2" -> "402 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"402 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_2" -> "403 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"403 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "405 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"404 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "405 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"405 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2" -> "406 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"406 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_2" -> "407 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"407 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "409 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"408 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "409 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"409 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2" -> "410 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"410 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_2" -> "411 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"411 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "429 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_2"  [label="(1, 256, 32, 19)"];
"412 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "413 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"413 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_2" -> "414 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"414 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_2" -> "415 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"415 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "417 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"416 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "417 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"417 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_2" -> "418 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"418 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_2" -> "419 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"419 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "421 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"420 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "421 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"421 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_2" -> "422 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"422 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_2" -> "423 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"423 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "425 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2"  [label="(1, 256, 32, 19)"];
"424 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "425 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2"  [label="(256, 256, 3, 3)"];
"425 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_2" -> "426 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_2"  [label="(1, 256, 32, 19)"];
"426 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_2" -> "427 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(1, 256, 32, 19)"];
"427 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_2" -> "431 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_2"  [label="(1, 256, 32, 19)"];
"428 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "429 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_2"  [label="(180, 256, 3, 3)"];
"430 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "431 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_2"  [label="(36, 256, 3, 3)"];
"432 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "433 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"433 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3" -> "434 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"434 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_3" -> "435 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"435 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "437 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"436 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "437 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"437 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3" -> "438 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"438 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_3" -> "439 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"439 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "441 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"440 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "441 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"441 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3" -> "442 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"442 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_3" -> "443 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"443 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "445 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"444 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "445 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"445 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3" -> "446 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"446 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_3" -> "447 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"447 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "465 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_3"  [label="(1, 256, 16, 10)"];
"448 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "449 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"449 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_3" -> "450 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"450 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_3" -> "451 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"451 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "453 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"452 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "453 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"453 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_3" -> "454 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"454 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_3" -> "455 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"455 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "457 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"456 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "457 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"457 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_3" -> "458 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"458 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_3" -> "459 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"459 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "461 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3"  [label="(1, 256, 16, 10)"];
"460 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "461 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3"  [label="(256, 256, 3, 3)"];
"461 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_3" -> "462 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_3"  [label="(1, 256, 16, 10)"];
"462 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_3" -> "463 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(1, 256, 16, 10)"];
"463 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_3" -> "467 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_3"  [label="(1, 256, 16, 10)"];
"464 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "465 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_3"  [label="(180, 256, 3, 3)"];
"466 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "467 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_3"  [label="(36, 256, 3, 3)"];
"468 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "469 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"469 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4" -> "470 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"470 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/RELU_4" -> "471 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"471 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "473 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"472 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "473 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"473 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4" -> "474 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"474 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/RELU_4" -> "475 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"475 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "477 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"476 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "477 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"477 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4" -> "478 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"478 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/RELU_4" -> "479 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"479 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "481 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"480 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "481 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"481 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4" -> "482 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"482 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/RELU_4" -> "483 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"483 RetinaNet/RetinaHead[bbox_head]/ModuleList[cls_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "501 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_4"  [label="(1, 256, 8, 5)"];
"484 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "485 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"485 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/NNCFConv2d[conv]/conv2d_4" -> "486 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"486 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/RELU_4" -> "487 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"487 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[0]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "489 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"488 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "489 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"489 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/NNCFConv2d[conv]/conv2d_4" -> "490 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"490 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/RELU_4" -> "491 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"491 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[1]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "493 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"492 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "493 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"493 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/NNCFConv2d[conv]/conv2d_4" -> "494 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"494 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/RELU_4" -> "495 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"495 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[2]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "497 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4"  [label="(1, 256, 8, 5)"];
"496 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "497 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4"  [label="(256, 256, 3, 3)"];
"497 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/NNCFConv2d[conv]/conv2d_4" -> "498 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_4"  [label="(1, 256, 8, 5)"];
"498 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/RELU_4" -> "499 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4"  [label="(1, 256, 8, 5)"];
"499 RetinaNet/RetinaHead[bbox_head]/ModuleList[reg_convs]/ConvModule[3]/ReLU[activate]/SymmetricQuantizer/symmetric_quantize_4" -> "503 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_4"  [label="(1, 256, 8, 5)"];
"500 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "501 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_cls]/conv2d_4"  [label="(180, 256, 3, 3)"];
"502 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_4" -> "503 RetinaNet/RetinaHead[bbox_head]/NNCFConv2d[retina_reg]/conv2d_4"  [label="(36, 256, 3, 3)"];
}
